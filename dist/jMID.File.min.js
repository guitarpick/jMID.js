/**
 * jMID.File.min.js v0.1
 *
 * A javascript library for reading, manipulating, and writing MIDI files
 * @author Steven Sojka - Thursday, January 31, 2013
 *
 * MIT Licensed
 */
var jMID=function(c){c.File=function(a){for(var b in a)a.hasOwnProperty(b)&&(this[b]=a[b]);this.timeSignature={beatsPerBar:4,beatValue:4};this.timing={MicroSPB:5E5};this.processMetaEvents();for(a=this.tracks.length-1;0<=a;a--)this.tracks[a].timing=this.timing;this.processChannelEventTimes();this.processNotes()};c.File.prototype={processMetaEvents:function(){for(var a=c.Query(this).filter("type:meta").not("subtype:endOfTrack, subtype:trackName").toArray(),b=0,d=a.length;b<d;b++)switch(a[b].subtype){case "timeSignature":this.timeSignature.beatsPerBar=
a[b].numerator;this.timeSignature.beatValue=a[b].denominator;break;case "setTempo":this.timing.MicroSPB=a[b].microsecondsPerBeat}this.calculateBPM();this.timing.MSPQN=this.timing.MicroSPB/1E3;this.timing.MSPT=this.timing.MSPQN/this.header.ticksPerBeat},processChannelEventTimes:function(){for(var a=0,b=this.tracks.length;a<b;a++)this.tracks[a].processChannelEventTimes()},processNotes:function(){for(var a=0,b=this.tracks.length;a<b;a++)this.tracks[a].processNotes()},calculateBPM:function(){this.timing.BPM=
6E7/this.timing.MicroSPB*(this.timeSignature.beatValue/4)},getTrack:function(a){return this.tracks[a]},getHeader:function(){return this.header},encode:function(){return(new c.Encoder).encode(this)},base64Encode:function(){return btoa(this.encode())}};c.Emitter&&c.Emitter.register(c.File);return c}(jMID||{});
