/**
 * jMID.Player.min.js v0.2.1
 *
 * A javascript library for reading, manipulating, writing, and timing MIDI files
 * @author Steven Sojka - Tuesday, March 19, 2013
 *
 * MIT Licensed
 */
var jMID=function(c){var d=function(a){this.events=a;this.queue=[];this.nextEvent=null};d.prototype={setQueue:function(a){this.queue=this.events.filter(function(b){return b.time>=a})},queueNext:function(){this.queue.shift();this.nextEvent=this.queue.length?this.queue[0]:null},getNextEvent:function(){return this.nextEvent},triggerEvent:function(){this.trigger("eventTriggered",this.nextEvent);this.queueNext()},checkEvent:function(a){1>this.queue.length&&this.trigger("queueEmpty");null!==this.nextEvent&&
a>=this.nextEvent.time&&this.triggerEvent()}};c.Emitter.register(d);c.Player=function(a){if(!a.file)throw Error("File is required");this.context=a.context||new webkitAudioContext;this.startTime=this.currentPosition=0;this.needsRequeue=!0;this.tracks=[];this.schedules=[];this.loop=!1;this.bufferSize=a.bufferSize||512;this.scriptNode=this.context.createScriptProcessor(this.bufferSize,1,1);this.isPlaying=!1;this.onTrackEnd=this.onTrackEnd.bind(this);this.endTimeout;this.timer=new c.AudioTimer(this.context);
this.scriptNode.connect(this.context.destination);for(var b in a)a.hasOwnProperty(b)&&(this[b]=a[b]);this.initializeQueues();this.scriptNode.onaudioprocess=this.onAudioProcess.bind(this)};c.Player.prototype={onAudioProcess:function(){this.isPlaying&&(this.currentPosition=this.getContextTime()-this.startContextTime+this.startPosition)},initializeQueues:function(){this.tracks=[];for(var a=0,b=this.file.tracks.length;a<b;a++)this.tracks.push(new d(this.file.tracks[a].getEvents())),this.tracks[a].setQueue(1E3*
this.currentPosition),this.tracks[a].on("eventTriggered",this.onEventTrigger.bind(this)),this.tracks[a].on("queueEmpty",this.onQueueEmpty.bind(this))},onQueueEmpty:function(){for(var a,b=0,c=this.tracks.length;b<c;b++)if(0<this.tracks[b].queue.length){a=!1;break}else a=!0;a&&(this.trigger("endOfFile"),this.stop(),this.loop&&this.play())},onEventTrigger:function(a){this.trigger("event",a)},addSchedule:function(a){this.schedules.push(a)},removeSchedule:function(a){this.schedules.splice(this.schedules.indexOf(a),
1)},scheduleEvents:function(a){var b=this;this.tracks.forEach(function(c){c.setQueue(1E3*b.currentPosition);c.queue.every(function(c){setTimeout(function(){b.isPlaying&&a.call(b,c,c.time/1E3-b.currentPosition+b.getContextTime())},0);return b.isPlaying})})},queueEvents:function(){for(var a=0,b=this.tracks.length;a<b;a++)this.tracks[a].setQueue(1E3*this.currentPosition)},getContextTime:function(){return this.context.currentTime},getCurrentTime:function(){return this.currentPosition},gotoPosition:function(a){this.currentPosition=
a},onTrackEnd:function(){this.stop(this.loop);this.trigger("endOfTrack");this.loop&&(this.trigger("loop"),this.play())},setTempo:function(a){this.file.setTempo(a);this.isPlaying&&(this.pause(),this.play())},setLoop:function(a){this.loop=a},play:function(){if(!this.isPlaying){this.isPlaying=!0;for(var a=0,b=this.schedules.length;a<b;a++)this.scheduleEvents(this.schedules[a]);this.endOfTrackTime=this.file.duration/1E3-this.currentPosition+this.getContextTime();this.timer.callbackAtTime(this.endOfTrackTime,
this.onTrackEnd,this);this.startContextTime=this.getContextTime();this.startPosition=this.currentPosition;this.trigger("play")}},pause:function(){this.isPlaying=!1;this.trigger("pause");this.timer.removeCallbackAtTime(this.onTrackEnd,this.endOfTrackTime)},stop:function(a){this.timer.removeCallbackAtTime(this.onTrackEnd,this.endOfTrackTime);this.currentPosition=0;this.isPlaying=!1;this.needsRequeue=!0;a||this.trigger("stop")}};c.Emitter.register(c.Player);return c}(jMID||{});
