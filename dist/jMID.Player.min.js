/**
 * jMID.Player.min.js v0.2
 *
 * A javascript library for reading, manipulating, writing, and timing MIDI files
 * @author Steven Sojka - Tuesday, February 05, 2013
 *
 * MIT Licensed
 */
var jMID=function(c){var d=function(a){this.events=a;this.queue=[];this.nextEvent=null};d.prototype={setQueue:function(a){this.queue=this.events.filter(function(b){return b.time>=a});this.nextEvent=this.queue[0]?this.queue[0]:null},queueNext:function(){this.queue.shift();this.nextEvent=this.queue.length?this.queue[0]:null},getNextEvent:function(){return this.nextEvent},triggerEvent:function(){this.trigger("eventTriggered",this.nextEvent);this.queueNext()},checkEvent:function(a){1>this.queue.length&&
this.trigger("queueEmpty");null!==this.nextEvent&&a>=this.nextEvent.time&&this.triggerEvent()}};c.Emitter.register(d);c.Player=function(a){if(!a.file)throw Error("File is required");this.context=a.context||new webkitAudioContext;this.startTime=this.currentPosition=0;this.needsRequeue=!0;this.tracks=[];this.loop=!1;this.bufferSize=a.bufferSize||1024;this.scriptNode=this.context.createScriptProcessor(this.bufferSize,1,1);this.isPlaying=!1;this.scriptNode.connect(this.context.destination);for(var b in a)a.hasOwnProperty(b)&&
(this[b]=a[b]);this.initializeQueues();this.scriptNode.onaudioprocess=this.onAudioProcess.bind(this)};c.Player.prototype={onAudioProcess:function(){if(this.isPlaying){this.currentPosition=this.getContextTime()-this.startContextTime+this.startPosition;for(var a=0,b=this.tracks.length;a<b;a++)this.tracks[a].checkEvent(1E3*this.currentPosition)}},initializeQueues:function(){this.tracks=[];for(var a=0,b=this.file.tracks.length;a<b;a++)this.tracks.push(new d(this.file.tracks[a].getEvents())),this.tracks[a].setQueue(1E3*
this.currentPosition),this.tracks[a].on("eventTriggered",this.onEventTrigger.bind(this)),this.tracks[a].on("queueEmpty",this.onQueueEmpty.bind(this))},onQueueEmpty:function(){for(var a,b=0,c=this.tracks.length;b<c;b++)if(0<this.tracks[b].queue.length){a=!1;break}else a=!0;a&&(this.trigger("endOfFile"),this.stop(),this.loop&&this.play())},onEventTrigger:function(a){this.trigger("event",a)},queueEvents:function(){for(var a=0,b=this.tracks.length;a<b;a++)this.tracks[a].setQueue(1E3*this.currentPosition)},
getContextTime:function(){return this.context.currentTime},getCurrentTime:function(){return this.currentPosition},gotoPosition:function(a){this.currentPosition=a;this.queueEvents()},play:function(){this.needsRequeue&&this.queueEvents();this.startContextTime=this.getContextTime();this.startPosition=this.currentPosition;this.isPlaying=!0;this.needsRequeue=!1;this.trigger("play")},pause:function(){this.isPlaying=!1;this.trigger("pause")},stop:function(){this.currentPosition=0;this.isPlaying=!1;this.needsRequeue=
!0;this.trigger("stop")},setLoop:function(a){this.loop=a}};c.Emitter.register(c.Player);return c}(jMID||{});
